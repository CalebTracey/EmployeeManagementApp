version: '3.7'

# Define services
services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: ../backend # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
#    depends_on:
#      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: ${JDBC_DATABASE_URL}
      SPRING_DATASOURCE_USERNAME: ${JDBC_DATABASE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${JDBC_DATABASE_PASSWORD}
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend

  # Frontend Service
  app-client:
    build:
      context: frontend # Use an image built from the specified dockerfile
      dockerfile: frontend/Dockerfile
      args:
        REACT_APP_API_BASE_URL: http://localhost:8080/api/v1/
    ports:
      - "9090:80" # Map the exposed port 80 on the container to port 9090 on the host machine
    restart: always
    depends_on:
      - app-server
    networks:
      - frontend

   Database Service (psql)
  db:
    image: postgres:13.3
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_DATABASE: db_database
      POSTGRES_USER: calebtracey
      POSTGRES_PASSWORD: caleb
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_ROOT_PASSWORD: caleb
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend

# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend: